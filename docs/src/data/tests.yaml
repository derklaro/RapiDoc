basic:
  - hidden-test:
      title: some-name
      hidden: true
      validates:
        - something
  - hide-show-sections:
      title: Hide & Show various sections
      validates:
        - show-info
        - show-header
        - allow-authentication
        - allow-server-selection
        - allow-try
  - hide-show-spec:
      title: Hide and Show Spec Operations
      validates:
        - allow-spec-url-load
        - allow-spec-file-load
        - allow-spec-file-download
  - font:
      validates:
        - regular-font
        - mono-font
        - font-size
  - theme-n-color:
      validates:
        - theme
        - primary-color
        - header-color
        - nav-bg-color
        - nav-text-color
        - nav-accent-color
  - search:
      title: Allow Search
      validates:
        - allow-search
        - allow-advanced-search
  - schema:
      title: Schema Configurations
      validates:
        - schema-style
        - default-schema-tab
        - schema-expand-level
        - schema-description-expanded
        - allow-schema-description-expand-toggle
  - nav-styles:
      title: Navigation Style
      validates:
        - use-path-in-nav-bar
        - show-method-in-nav-bar
        - nav-active-item-marker
        - nav-item-spacing
  - nav-hidden:
      title: Hide Side Navigation Bar
      validates:
        - show-side-nav
  - show-components:
      validates:
        - show-components
  - deprecated-items:
      title: Deprecated items should be marked properly
      validates:
        - Deprecated paths and properties in schema are annotated
  - long-schemas:
      title: Large Schemas
      validates:
        - How large Schemas are rendered
  - long-paths-n-descriptions:
      title: Long Paths And Descriptions
      validates:
        - How long Paths and descriptions are rendered
  - override-descriptions-in-refs:
      title: Override descriptions in refs
      validates:
        - When a schema is created using refs, it can override the refs descriptions

advanced:
  - parameters:
      title: Request Parameters
      validates:
        - Various request parameters types
        - Request body as JSON
        - Request body as FORM DATA
  - data-types:
      title: Data Types
      validates:
        - Request Body accepting a JSON
        - Schema with primitive properties
        - Schema with multiple nested objects and primitive
        - Request and Response parameters with various Data Types having constraints and deprecations
  - data-types-multiple:
      title: Data Types (Fields with multiple types)
      validates:
        - Fields with multiple types
  - example-filling:
      title: Filling Request parameters using examples
  - example-in-nested-refs:
      title: Providing Examples in Nested Refs
  - example-generation-too-many:
      title: Possibility of auto generating too many examples
      validates:
        - When there is a possibility to generate too many examples, It should limit to only 10 
  - schema-title-and-descriptions:
      title: Schema Title and Descriptions
      validates:
        - Rendering of Titles and descriptions provided in the schema
  - read-n-write-only-fields-in-schema:
      title: Schema with readonly and writeonly properties
      validates:
        - Read-Only fields are properly annotated in Schema
        - Write-Only fields are properly annotated in Schema
  - read-n-write-only-fields-display-in-request-n-response:
      title: Hide or Display Read & Write Only fields in Request, Response, callback and Webhooks
      validates:
        - By default read-only properties in Request should not be shown
        - By default write-only properties in Response should not be shown
        - Default behaviour of read-only and write-only is opposite in Callbacks & Webhooks
        - The display of read and write only properties in schemas can be altered
  - array-and-object-nesting:
      title:  Array and Object Nesting
      validates:
        - Multiple level of nesting of arrays and object
  - circular-refs:
      title: Circular Refs
      validates:
        - Cercular References should be dealt 
  - xxx-of-combinations:
      title: One-Of, All-Of, Any-Of Commbinations
  - xxx-of-with-refs:
      title: One-Of, All-Of, Any-Of with Refs
  - xxx-of-nesting:
      title: One-Of, All-Of, Any-Of Nesting
      validates:
        - Nesting of One-Of, All-Of, Any-Of
  - xxx-of-nesting-with-expand-level:
      title: One-Of, All-Of, Any-Of Nesting with Schema expand level
      validates:
        - schema-expand-level should work with `xxx-of` operators
  - xxx-of-titles:
      title: One-Of, All-Of, Any-Of with Titles
      validates:
        - One-Of, All-Of, Any-Of operators can have titles associated with them, whch should be displayed in Schema
  - request-header-as-object:
      title: Sending JSON object in request header
      validates:
        - Request-Header value can be sent as JSON object
  - filtering-paths:
      title: Filtering out paths from the spec
      validates:
        - match-paths
        - match-type
        - remove-endpoints-with-badge-label-as
  - swagger-v2:
      title: Limited support for swagger 2.0
      validates:
        - Limited support for Swagger V2 from RapiDoc 9.3.9 onwards
        - Should Display all Paths, Request and response
