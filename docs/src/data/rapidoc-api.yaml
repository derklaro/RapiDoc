Attributes:
  - General:
    - name: spec-url
      description: >
        URL of the OpenAPI spec to view.
      default: (empty)  
    - name: update-route
      description: Setting true will update the URL on the browser's location whenever a new section is visited either by scrolling or clicking.
      allowed: ["true", "false"]
      default: true
    - name: route-prefix
      description: Allows adding a custom prefix to routes to support third-party routing needs.
      default: "#"
    - name: sort-tags
      description: > 
        To list tags in alphabetic order, otherwise tags will be ordered 
        based on how it is specified under the <span class="mono yellow">tags</span> section in the spec.
      allowed: ["true", "false"]
      default: "false"
    - name: sort-schemas
      description: >
        To list schemas in alphabetic order, 
        otherwise schemas will be ordered based on how it is specified under the <span class="mono yellow">schemas</span> section in the spec. 
        <span class="orange bold">Note :</span>Only has an effect if 
        <span class="mono yellow">render-style=focused</span> and <span class="mono yellow">show-components=true</span>
      allowed: ["true", "false"]
      default: "false"
    - name: sort-endpoints-by
      allowed:
        - path
        - method
        - summary
        - none
      description: Sort endpoints within each tag by path, method, or summary. 'none' leaves the sort order unmodified.
      example: examples/arrange-by-tags.html
      default: path
    - name: heading-text
      description: Heading text on the top-left corner.
      default: (empty)
    - name: goto-path
      description: >
        Initial location on the document (identified by method and path) where you want to go after the spec is loaded.
        <span class="mono yellow">goto-path</span> should be in the form of <span class="mono fg-color">{method}-{path}</span>
        for instance you want the user to land on <span class="mono fg-color">GET /user/login</span> path 
        you should provide the location as <span class="mono fg-color">get-/user/login</span>
      default: (empty)
    - name: fill-request-fields-with-example
      allowed: ["true", "false"]
      description: Request fields will be filled with example values (if provided in spec).
      default: true
    - name: persist-auth
      allowed: ["true", "false"]
      description: Authentication will be persisted to localStorage.
      default: "false"
  
  - UI Colors and Fonts:
    - name: theme
      description: > 
        Is the base theme, which is used for calculating colors for various UI components. 
        <span class="mono yellow">theme, bg-color</span> and <span class="mono yellow">text-color</span> 
        are the base attributes for generating a custom theme
      allowed:
        - light
        - dark
      default: dark
    - name: bg-color
      description: Hex color code for the main background.
      default: |
        <ul style = "font-family: Nunito; color:var(--color-yellow-dim)">
          <li> Dark Theme : <span class="mono yellow"> #333 </span> </li>
          <li> Light Theme : <span class="mono yellow"> #fff </span> </li>
        </ul>
    - name: text-color
      description: Hex color code for text.
      default: |
        <ul style = "font-family: Nunito; color:var(--color-yellow-dim)">
          <li> Dark Theme : <span class="mono yellow"> #bbb </span> </li>
          <li> Light Theme : <span class="mono yellow"> #444 </span> </li>
        </ul>
    - name: header-color
      description: Hex color code for the header's background.
      default: "#444444"
    - name: primary-color
      description: Hex color code used for controls such as buttons and tabs.
      default: "#FF791A"
    - name: load-fonts
      allowed: ["true", "false"]
      description: RapiDoc will attempt to load fonts from CDN. Set to false if not intended.
      default: true
    - name: regular-font
      description: Font name(s) for regular text.
      default: >
        <span style="font-family: Nunito; font-size:13px"> Open Sans, Avenir, Segoe UI, Arial, sans-serif </span>
    - name: mono-font
      description: Font name(s) for mono-spaced text.
      default: >
        <span style="font-family: Nunito; font-size:13px"> Monaco, 'Andale Mono', 'Roboto Mono', 'Consolas' monospace </span>
    - name: font-size
      allowed:
        - default
        - large
        - largest
      description: Sets the relative font sizes for the document.
      default: default
      example: examples/font-size.html
    - name: css-file & css-classes
      hidden: true
      description: > 
        These two attributes go together which helps to inject your own CSS class.
        It creates <span class="yellow mono"> &lt;link&gt;</span>tag in your html and link to your external css file
        <ul>
          <li> provide the name of css file in <span class="yellow mono">css-file</span> attribute </li>
          <li> 
            provide names of all the CSS class names that you would like to apply to RapiDoc Element separated by a space in 
            <span class="yellow mono">css-classes</span> attribute 
          </li>
        </ul>

  - Navigation bar settings:
    - name: show-method-in-nav-bar
      allowed:
        - "false"
        - as-plain-text
        - as-colored-text
        - as-colored-block
      description: shows API Method names in the navigation bar (if you customized nav-background make sure there is a proper contrast) 
      default: "false"
      example: examples/nav-item-with-method.html
    - name: use-path-in-nav-bar
      allowed: ["true", "false"]
      description: >
        Show API paths in the navigation bar instead of summary/description.
        <div class="orange"> 
          <span class="bold yellow-dim">NOTE: </span> 
          Setting this value to <span class="mono yellow"> true </span>wont automatically display the API Method in the path<br/>
          If you like to show the API method as well then use <span class="mono yellow"> show-method-in-nav-bar</span> attribute
        </div>  
      default: "false"
      example: examples/nav-item-as-path.html
    - name: nav-bg-color
      description: Navigation bar's background color.
      default: (empty)
      example: examples/nav-bg-color.html
    - name: nav-text-color
      description: Navigation bar's text color.
      default: (empty)
    - name: nav-hover-bg-color
      description: background color of the navigation item on mouse-over
    - name: nav-hover-text-color
      description: text color of the navigation item on mouse-over	
    - name: nav-accent-color
      description: Accent color used in navigation Bar (such as background of active navigation item)
    - name: nav-accent-text-color	
      description: Text color used in navigation bar selected items
    - name: nav-active-item-marker
      allowed:
        - left-bar
        - colored-block
      description: Navigation active item indicator styles.
      default: left-bar
    - name: nav-item-spacing
      allowed:
        - default
        - compact
        - relaxed
      description: Controls navigation item spacing
      default: default
      example: examples/navbar-spacing.html
    - name: on-nav-tag-click
      allowed:
        - expand-collapse
        - show-description
      description: >
        Determines the behavior of clicking on a tag in the navigation bar. 
        It can either expand-collapse the tag or take you to the tag's description page.<br/>
        <span class="orange">Note: applies only to <span class="mono yellow">render-style = focused</span>
      default: expand-collapse

  - UI Layout & Placement:
    - name: layout
      allowed:
        - row
        - column
      description: > 
        Layout helps in placement of request/response sections. 
        In column layout, request & response sections are placed one below the other, In row layout they are placed side by side. 
        This attribute is applicable only when the device width is more than 768px and the render-style is 'view'.
      default: row
    - name: render-style
      allowed:
        - read
        - view
        - focused
      description: >
        determines display of api-docs. Currently there are three modes supported.
        <ul>
          <li> 
            <span class="yellow"> view </span> friendly for quick exploring (expand/collapse the section of your interest) |  
            <a href="examples/example1.html">Example</a>  
          </li>
          <li> 
            <span class="yellow"> read </span> suitable for reading (like a continuous web-page)  |
            <a href="examples/read-mode.html">Example</a>  
          </li>
          <li> 
            <span class="yellow"> focused </span> similar to read but focuses on a single endpoint at a time (good for large specs)  |
            <a href="examples/focused-mode.html">Example</a>  
          </li>
        </ul>  
      default: read
    - name: response-area-height
      description: >
        <span class="yellow-dim">Allowed: </span> valid CSS height value such as 400px, 50%, 60vh etc <br/>
        Controls the height of the response textarea.
      default: 300px

  - Hide/Show Sections:
    - name: show-info
      allowed: ["true", "false"]
      description: >
        show/hide the documents info section
        Info section contains information about the spec, such as the title and description of the spec, 
        the version, terms of services etc. In certain situation you may not need to show this section. 
        For instance you are embedding this element inside a another help document.
        Chances are, the help doc may already have this info, in that case you may want to hide this section.
      default: true
    - name: info-description-headings-in-navbar
      allowed: ["true", "false"]
      description: >
        Include headers from info -> description section to the Navigation bar (applies to read mode only)
        Will get the headers from the markdown in info - description (h1 and h2) into the menu on the left (in read mode) 
        along with links to them. This option allows users to add navigation bar items using Markdown
      default: "false"
      example: examples/markdown-headings.html
    - name: match-paths
      description: >
        if you want to show only few selected APIs based on the target audience, you may use this attribute to define 
        which paths should be rendered. The filter can be a simple substring match for a path or can be a complex regex expression. 
        Wheather to use substring match or regex match is specified through match-type attribute
      default: (empty)
      example: examples/filter-test.html
    - name: match-type
      allowed:
        - includes
        - regex
      description: Defines how match-paths is used for filtering
      default: includes
    - name: remove-endpoints-with-badge-label-as
      description: >
        Comma separated badge labels to be removed from the spec.
        You may use vendor-extension x-badges to assign badges to endpoints. 
        This attributes helps in removing the endpoints which matches a badge label 
      example: examples/filter-test.html
    - name: show-components
      allowed: ["true", "false"]
      description: >
        show/hide the components section both in document and menu (available only in focused render-style)
        Will show the components section containing schemas, responses, examples, requestBodies, headers, securitySchemes, links and callbacks
      default: "false"
    - name: show-header
      allowed: ["true", "false"]
      description: > 
        show/hide the header. If you do not want your user to open any other api spec, other than the current one, 
        then set this attribute to <span class="mono fg-color">false</span>
      default: true
    - name: allow-authentication
      allowed: ["true", "false"]
      description: >
        Authentication feature, allows the user to select one of the authentication mechanism thats available in the spec. 
        It can be http-basic, http-bearer or api-key. If you do not want your users to go through the authentication process, 
        instead want them to use a pre-generated api-key then you may hide authentication section by 
        setting this attribute to false and provide the api-key details using various api-key-???? attributes.
      default: true
    - name: allow-spec-url-load
      allowed: ["true", "false"]
      description: If set to <span class="mono fg-color">false</span>, user will not be able to load any spec url from the UI.
      default: true
    - name: allow-spec-file-load
      allowed: ["true", "false"]
      description: If set to <span class="mono fg-color">false</span>, user will not be able to load any spec file from the local drive. This attribute is applicable only when the device width is more than 768px, else this feature is not available
      default: true
    - name: allow-spec-file-download	
      allowed: ["true", "false"]
      description: If set to  <span class="mono fg-color">true</span>, it provide buttons in the overview section to download the spec or open it in a new tab.
      default: "false"
    - name: allow-search
      allowed: ["true", "false"]
      description: Provides quick filtering of API
      default: true
    - name: allow-advanced-search	
      allowed: ["true", "false"]
      description: Provides advanced search functionality, to search through API-paths, API-description, API-parameters and API-Responses
      example: examples/search-by-params.html
      default: true
    - name: allow-try
      allowed: ["true", "false"]
      description: The 'TRY' feature allows you to make REST calls to the API server. To disable this feature, set it to <span class="mono fg-color">false</span>. 
      default: true
      example: examples/try.html
    - name: show-curl-before-try
      allowed: ["true", "false"]
      description: If set to  <span class="mono fg-color">true</span>, the cURL snippet is displayed between the request and the response without clicking on TRY
      default: "false"
      example: examples/show-curl-before-try.html
    - name: allow-server-selection
      allowed: ["true", "false"]
      description: Allow users to switch between different servers defined in the OpenAPI spec.
      default: true
    - name: allow-schema-description-expand-toggle
      allowed: ["true", "false"]
      description: allow or hide the ability to expand/collapse field descriptions in the schema
      default: true  
  
  - Schema Section Settings:
    - name: schema-style
      allowed:
        - tree
        - table
      description: Two different ways to display object-schemas in the responses and request bodies
      default: tree
      example: examples/schema-table.html
    - name: schema-expand-level
      description: Schemas are expanded by default, use this attribute to control how many levels in the schema should be expanded
      default: 999
      example: examples/schema-expand-level.html
    - name: schema-description-expanded
      allowed: ["true", "false"]
      description: >
        Constraint and descriptions information of fields in the schema are collapsed to show only the first line. 
        Set it to true if you want them to fully expanded
      default: "false"
    - name: schema-hide-read-only
      allowed:
        - default
        - never
      description: >
        default will show read-only schema attributes in Responses, and in Requests of Webhook / Callback 
        If you do not want to hide read-only fields in schema then you may set it to 'never' 
        <span class="orange">Note:This do not effect example generation.</span>
      default: default
      example: examples/schema-read-and-write-only.html
    - name: schema-hide-write-only
      allowed:
        - default
        - never
      description: >
        default will show write-only schema attributes in Requests, and in Responses of Webhook / Callback
        If you do not want to hide write-only fields in schema then you may set it to 'never'
        <span class="orange"> Note: This do not effect example generation.</span>
      default: default
      example: examples/schema-read-and-write-only.html
    - name: default-schema-tab
      allowed:
        - schema
        - example
      description: > 
        The schemas are displayed in two tabs - Model and Example. 
        This option allows you to pick the default tab that you would like to be active
      default: schema
  
  - API Server & calls:
    - name: server-url
      description: >
        OpenAPI spec has a provision for providing the server url. 
        The UI will list all the server URLs provided in the spec. 
        The user can then select one URL to which he or she intends to send API calls while trying out the apis. However, 
        if you want to provide an API server of your own which is not listed in the spec, you can use this property to provide one. 
        It is helpful in the cases where the same spec is shared between multiple environment say Dev and Test and each have their own API server.
      default: (empty)
    - name: default-api-server
      description: >
        If you have multiple api-server listed in the spec, use this attribute to select the default API server, 
        where all the API calls will goto. This can be changed later from the UI
      default: (empty)
    - name: api-key-name
      description: Name of the API key that will be send while trying out the APIs
      default: (empty)
    - name: api-key-location
      allowed:
        - schema
        - example
      description: determines how you want to send the api-key.
      default: (empty)
    - name: api-key-value
      description: Value of the API key that will be send while trying out the APIs. This can also be provided/overwritten from UI.
      default: (empty)
    - name: fetch-credentials
      allowed:
        - header
        - query
      description: >
        Enables passing credentials/cookies in cross domain calls, as defined in the 
        <a href="https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials"> Fetch standard, in CORS requests</a> 
        that are sent by the browser
      default: (empty)

Methods:
  description: How to use methods
  items:
    - name: loadSpec()
      description: >
        To programmatically load spec. The method takes
        either a string containing the url of the specs
        or a JSON object representing a valid spec
      example: https://github.com/rapi-doc/RapiDoc/blob/master/docs/examples/example9.html  
    - name: scrollToPath(path)
      description: >
        To programmatically scroll to a section (identified by combination method and path). <span class="mono fg-color">path</span> 
        should be provided in the format of <span class="mono fg-color">{method}-{path}</span>
        for instance you want to scroll to <span class="mono fg-color">GET /user/login</span> you should provide the location as <span class="mono fg-color">get-/user/login</span>
      example: examples/collapsable-focused.html  
    - name: setHttpUserNameAndPassword (securitySchemeId, username, password)
      description: >
        To programmatically provide username and password. <span class="mono fg-color">securitySchemeId</span> should be a valid securityScheme which you have defined in the spec
    - name: setApiKey(securitySchemeId, token)
      description: >
        To programmatically provide <span class="mono fg-color">api-key. securitySchemeId</span> should be a valid securityScheme which you have defined in the spec
    - name: setApiServer(apiServerUrl)
      description: >
        To programmatically set API Server.  <span class="mono fg-color">apiServerUrl</span> should be a valid server url which you have defined in the spec
      code: |
        <html>
          ...
          <rapi-doc id="the-doc" spec-url = "https://.../spec.yaml"> </rapi-doc>
          <script>
            window.addEventListener('DOMContentLoaded', (event) => {
              const rapidocEl = document.getElementById('the-doc');
              rapidocEl.addEventListener('spec-loaded', (e) => {
                rapidocEl.setApiServer(globalThis.origin + "/api");
                // Sets the server to http://localhost:8080/api
                // you must have defined this server in your spec
              });
            });
          </script>
          ...
        </html>

Events:
  description: How to use Events
  items:
    - name: event1-name
      description: event1 description
    - name: event2-name
      description: event2 description
Slots:
  description: How to use Slots
  items:
    - name: slot1-name
      description: slot1 description
    - name: slot1-name
      description: slot1 description
Extensions:
  description: How to use Vendor Extensions
  items:
    - name: extension1-name
      description: extension1 description
    - name: extension2-name
      description: extension2 description     