---
import ExampleLayout from '../../layouts/ExampleLayout.astro';
import { getSpecUrl } from '../../utils/getSpecUrl';

const specUrl = getSpecUrl(Astro.url);
---

<ExampleLayout>
  <rapi-doc 
    id = "thedoc"
    spec-url = {specUrl}
    show-header = "false"
    show-info = "false"
    allow-server-selection	= "false"
    allow-authentication = "false"
    render-style = "read"
    schema-style = "table"
    default-schema-tab="schema"
  > 

    <span slot="operations-top" >
      <div style="font-size:.8rem; margin:16px; padding:16px; background-color:#444; color:#fff; border-radius:4px" >
        <div style = "display:flex; gap:16px">
          <div style = "display:block">
            <b> SCHEMA </b><br/>
<pre style="padding:12px; background-color:#222;width: 400px; border-radius:4px"><code class="language-js" style="font-size:.8rem;">{
`{
  user: {
    type      : "object",
    properties: {
      id       : { type: "string", readOnly: true },
      name     : { type: "string" },
      password : { type: "string", writeOnly: true}
    }
  }
}`
}</code></pre>
          </div>
          <div>
            <b> ATTRIBUTES </b><br/>
            <table style = "border:1px solid #aaa; margin-top:8px; " >
              <tr style = "border-top:1px solid #aaa;">
                <td class= "mono" style="width:175px"> schema-hide-read-only </td> 
                <td style="width:95px"> 
                  <span>
                    <input type="radio" id="default" name="readonly" value="default" onclick="setSchemaAttr('schema-hide-read-only', this.value)">
                    <label for="default">default</label>
                  </span>
                  <br/>
                  <span>
                    <input type="radio" id="never" name="readonly" value="never" onclick="setSchemaAttr('schema-hide-read-only', this.value)">
                    <label for="never">never</label>
                  </span>
                </td>
                <td rowspan="2" style="border-left: 1px solid #aaa;">By default 
                  <ul>
                    <li>If a schema is used in Request all the read-only properties are hidden</li>
                    <li>If a schema is used in Response all the write-only properties are hidden</li>
                    <li>In Case of WEBHOOKS and CALLBACKS the behavior is opposite</li>
                    <li>You may use the attributes on the left to define alternative behavior</li>
                  </ul>
                </td>
              </tr>
              <tr style = "border-top:1px solid #aaa;">
                <td class= "mono"> schema-hide-write-only </td> 
                <td> 
                  <span>
                    <input type="radio" id="default" name="writeonly" value="default" onclick="setSchemaAttr('schema-hide-write-only', this.value)" >
                    <label for="default">default</label>
                  </span>
                  <br/>
                  <span>
                    <input type="radio" id="never" name="writeonly" value="never" onclick="setSchemaAttr('schema-hide-write-only', this.value)">
                    <label for="never">never</label>
                  </span>
                </td>
              </tr>
              <tr style = "border-top:3px solid #aaa;">
                <td colspan="3" style="text-align: center;"> 
                  <button class="btn" onclick="toggleSchemaStyle()">Toggle Schema Style</button>
                </td>
              </tr>
            </table>  
          </div>
        </div>
      </div>  
    </span>


  </rapi-doc>
</ExampleLayout>

<script is:inline>
  function getRapiDoc(){
    return document.getElementById("thedoc");
  }

  function toggleSchemaStyle () {
    if (getRapiDoc().getAttribute('schema-style') === 'table') {
      getRapiDoc().setAttribute('schema-style', 'tree');
    } else {
      getRapiDoc().setAttribute('schema-style', 'table');
    }
  }

  function setSchemaAttr(attrName, attrValue) {
    getRapiDoc().setAttribute(attrName, attrValue);
  }
</script>

<style>
  .btn {
    width: 180px;
    height: 40px;
    background-color: #0184cb;
    color: #fff;
    border: none;
    border-radius: 2px;
    outline:none;
  }

  table {
    font-family: 'Lato', 'Open Sans', sans-serif;
    border-collapse: collapse;
    border-radius: 12px;
  }
  th, td { 
    padding: 8px;
  }
</style>
