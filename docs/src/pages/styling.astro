---
import GlobalLayout from '../layouts/GlobalLayout.astro';
import PageBanner from '../components/PageBanner.astro';
import '../styles/table.css';
---

<GlobalLayout>
  <PageBanner slot="topbar" page="example-list" showWaves = {true} />
  <main>
    <h1>Advance Styling with RapiDoc</h1>
    <hr style="margin-bottom:2rem;"/>
    <span>
      <p>
        If you've worked with themes in a web application, you know how difficult it can be.
        RapiDoc is used in many corporates for API documentation, and every organization has its style guide to follow.
      </p>
      <p>
        Apart from aligning to an organizational style guide, theming can also be helpful to layout information based on the target audience. 
        That is to say, API documentation for a regular API developer can be very differently laid out than for an end-user. 
        In one case the regular API user may be more interested in APIs request and response schema, 
        whereas a new user would be looking for detailed descriptions usage examples code snippets, etc.
      </p>
    </span>

    <h2>Theming options</h2>
    <span>
      <p> 
        When you insert <span class="yellow mono bold"> {`<rapi-doc>`}</span> element in an HTML, 
        It is important to note that none of the existing style or css declarations will affect RapiDoc 
        as this is a native web-component and they inherently provide style encapsulation
      </p>
      <p>
        Well, this may be good for <span class="yellow mono bold"> {`<rapi-doc>`}</span> as its styles won't get accidentally messed up, 
        but it also makes it harder to change the styles of internal elements. 
        However, listed below are some of the options which you may use to achieve your desired styling
        <ul>
          <li> RapiDoc attributes</li>
          <li> CSS Parts</li>
          <li> Inject custom HTML, CSS and JS using <span class="yellow mono bold"> {`<slot>`}</span></li>
          <li> Inject HTML using markdown</li>
          <li> CSS vars</li>
        </ul>
      </p>
    </span>

    In This section will be focusing on CSS Parts 
    <h2>CSS Parts</h2>
    <p>
      While most of the styling needs can be taken care of by attributes, 
      but if a very specific need is there to target and style a particular section in the document 
      then RapiDoc provides many CSS parts that can be used to style them
    </p>
    <p>
      For instance, you can change the background and text color of the side navigation bar, 
      but what if, when you need to apply a mix of multiple colors with a gradient? 
      To achieve this you can use CSS to target specific sections of RapiDoc using <span class="mono bold">::part</span> selector
    </p>
    
    <img style="width:750px;margin:16px 0; border: 2px solid #497aab;border-radius: 8px; display:block" src="/assets/images/theme/rapidoc-csspart-nav.png" />
    
    <span>
      Below code snippet uses <span class="mono yellow"> rapi-doc::part(nav-bar)</span> 
      selector to target the navigation bar and renders a gardient navigation bar | &nbsp;
      <a href="/examples-theme/cssparts-nav1.html" target="_blank"> Demo</a>
    </span>
    <pre class="code-block">
      <code class="language-html">
        {`
          <html>
          ...
            <style>
              rapi-doc::part(section-navbar) { /* <<< targets navigation bar */
                background: linear-gradient(90deg, #3d4e70, #2e3746);
              }
            </style>

            <rapi-doc spec-url = "https://petstore.swagger.io/v2/swagger.json"
              theme = "dark"
              primary-color = "#f54c47"
              bg-color = "#2e3746"
              text-color = "#bacdee"
              show-header = "false"
            > </rapi-doc>
          ...
          </html>
        `}
      </code>
    </pre>

    <p>
      Likewise, there are many <span class="mono yellow">::part</span> selectors you can use that RapiDoc exposes for styling. 
      Let's take another example and this time we would highlight the Servers section by giving it an alternate background color as shown below
      <img style="width:750px;margin:16px 0; border: 2px solid #713795;border-radius: 8px; display:block" src="./assets/images/theme/rapidoc-csspart-server.png" />
      <span>
        And the code to achieve it is shown below | <a href="./examples-theme/cssparts-servers.html" target="_blank"> Demo</a>
      </span>
      <pre class="code-block">
        <code class="language-html">
        {`
          <html>
            ...
            <style>
              rapi-doc::part(section-servers) { /* <<< targets the server div */
                background: #6b5b95;
                color:#d1c2e4;
                margin:0 24px 0 24px;
                border-radius: 5px;
              }
              rapi-doc::part(label-selected-server) { /* <<< targets selected server label */
                color: #fff;
              }
            </style>
            <rapi-doc  spec-url = "https://petstore.swagger.io/v2/swagger.json"
              show-header = "false"
              nav-bg-color = "#423368"
              primary-color ="#df75c4"
              bg-color = "#fae4f5"
            > </rapi-doc>
            ...
          </html>          
        `}
        </code>
      </pre>
    </p>

    <p>
      Another Example to change the button styles | <a href="./examples-theme/cssparts-btn.html" target="_blank"> Demo</a>
      <pre class="code-block">
        <code class="language-html">
          {`
          <html>
            ...
            <style>
              rapi-doc::part(btn){ border-radius: 15px; }
              rapi-doc::part(btn-try) {
                background-color: yellow;
                color: #333;
                border-color: yellow;
              }
              rapi-doc::part(btn-selected-response-status) {
                background-color: yellow;
                color: #333;
                border-color: yellow;
              }
            </style>
            <rapi-doc  spec-url = "https://petstore.swagger.io/v2/swagger.json"
              show-header = "false"
              nav-bg-color = "#423368"
              primary-color ="#df75c4"
              bg-color = "#fae4f5"
            > </rapi-doc>
            ...
          </html>
          `}
        </code>
      </pre>
    </p>

    <p>
      Following are the list of <span class="mono yellow">css ::part</span> provided by rapidoc. The names of these parts should be self explenatory
      <table class="m-table">
        <tr> <td class="heading-row">Sections</td></tr>
        <tr>
          <td class="mono">
            section-navbar, section-navbar-search section-navbar-item, section-navbar-active-item, section-header section-main-content, section-logo, section-overview, label-overview-title, 
            section-auth, section-auth-scopes, section-servers, section-tag, section-operations-in-tag, section-operation
          </td>
        </tr>
        <tr> <td class="heading-row">Containers/ Wrappers</td></tr>
        <tr> <td class="mono">wrap-request-btn</td></tr>
        <tr> <td class="heading-row">Labels</td></tr>
        <tr>
          <td class="mono">
            label-header-title, label-overview-title, label-selected-server, label-tag-title, 
            label-operation-method, label-operation-path
          </td>
        </tr>

        <tr> <td class="heading-row">Buttons</td></tr>
        <tr>
          <td class="mono">
            btn, btn-fill, btn-outline, btn-search, btn-try, btn-fill, btn-clear, btn-copy, btn-clear-resp, 
          </td>
        </tr>

        <tr> <td class="heading-row">Tab Panels</td></tr>
        <tr>
          <td class="mono">tab-panel, tab-btn, tab-btn-row, tab-content </td>
        </tr>

        <tr> <td class="heading-row">Checkboxes/ Toggles</td></tr>
        <tr>
          <td class="mono">checkbox checkbox-auth-scope</td>
        </tr>

        <tr> <td class="heading-row">Inputs</td></tr>
        <tr>
          <td class="mono">textbox, textbox-param, textarea, textarea-param, file-input</td>
        </tr>
        <tr><td class="heading-row">Anchors</td></tr>
        <tr>
          <td class="mono"> anchor, anchor-overview, anchor-param-example</td>
        </tr>
      </table>
    </p>

    <h2>CSS Variables</h2>
    <p>RapiDoc uses many CSS variables style its content. These CSS variables can be changed directly in HTML</p>
    <pre class="code-block"><code class="language-css">
      /* General div Properties */
      --border-radius
      --layout
      --scroll-bar-width
      --nav-item-padding
      --resp-area-height
      --dialog-z-index

      /* Font */
      --font-mono
      --font-regular
      --font-size-small
      --font-size-mono
      --font-size-regular

      /* Background and Foreground Colors */
      --bg
      --bg2
      --bg3
      --light-bg
      --fg
      --fg2
      --fg3
      --light-fg
      --selection-bg
      --selection-fg
      --overlay-bg

      /* Border Colors */
      --border-color
      --light-border-color
      --code-border-color

      /* Primary Colors */  
      --primary-color
      --primary-color-invert
      --primary-color-trans

      /* Nav Colors */  
      --nav-bg-color
      --nav-text-color
      --nav-hover-bg-color
      --nav-hover-text-color
      --nav-accent-color
      --nav-accent-text-color
      --nav-get-color
      --nav-put-color
      --nav-post-color
      --nav-delete-color
      --nav-head-color

      /* Header Color */
      --header-bg
      --header-fg
      --header-color-darker
      --header-color-border

      /* Input Colors */
      --input-bg
      --placeholder-color
      --hover-color
      --focus-shadow

      --red
      --light-red
      --pink
      --light-pink
      --green
      --light-green
      --blue
      --light-blue
      --orange
      --light-orange
      --yellow
      --light-yellow
      --purple
      --brown
  
      /* Code Syntax Color*/
      --code-bg
      --code-fg
      --inline-code-fg
      --code-property-color
      --code-keyword-color
      --code-operator-color
    </code></pre>
  </main>
</GlobalLayout>

<style>
  .m-table td.heading-row {
    font-size: 1.2rem;
    font-weight: 800;
    border-bottom-width:0;
    color: var(--color-yellow);
  }

</style>