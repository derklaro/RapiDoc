---
import GlobalLayout from '../layouts/GlobalLayout.astro';
import PageBanner from '../components/PageBanner.astro';

import '../styles/table.css';
---

<GlobalLayout>
  <PageBanner slot="topbar" page="example-list" showWaves = {true} />
  <main>
    <h1>Performance Tips</h1>
    <span>RapiDoc is fast enough to parse and render OpenAPI spec, but if used in a wrong manner it may lag a bit when dealing with large specs</span>
    <hr/>

    <h2>How Large is a Large Spec ?</h2>
    <p>
      There are many factors thats responsible to call a spec a large spec, such as 
      <ul>
        <li>size</li>
        <li>number of schemas and operations defined</li>
        <li>number of references to a schema etc</li>
      </ul>
      There isn't any clear way to declare a spec large. 
      For instance a large sized spec ( ~ 6 mb) containing lot of description text is not considered large for parsing and rendering on the other 
      hand a medium sized spec which has containing many operations/paths all of which are referring to a single schema can lead to a very large output due to the repeated use of schema. 
    </p>

    <h2>Performance Tips</h2>
    <p> Below are some general tips that you can apply when you are dealing with slow rendering 
      <ul>
        <li>If you are using version 2 of OpenAPI spec (swagger 2.0), then pre convert it to OpenAPI 3.x. 
          When you provide a swagger 2.0 spec to RapiDoc, it attempts to convert it into OpenAPI 3.x which is a very high resource consuming operation.
        </li>
        <li> Use <span class="mono yellow">render-style as "view" or "focused"</span>
          these rendering styles are very fast as they use lazy rendering of the views
        </li>

      </ul>
    </p>

    <table class="m-table">
      <tr> 
        <th style="text-align:left">A large spec is used for the below performance test cases</th>
      </tr>
      <tr>
        <td> 
          <a href="./tests/perf-v2.html">Swagger 2.0 (Slow Performance)</a> 
          <span> Most of the time is taken by swagger 2 to OpenAPI conversion</span>  
        </td>
      </tr>
      <tr>
        <td> 
          <a href="./tests/perf-v3-read.html">OpenAPI 3.0 - Read Mode (okay performance)</a> 
          <span> The above spec pre-converted to OpenAPI 3 - read-mode renders everything in one large page, resulting into very large DOM, the user interactions like expand collapse are not much snappier</span>  
        </td>
      </tr>

      <tr>
        <td> 
          <a href="./tests/perf-v3-view.html">OpenAPI 3.0 - View Mode (fast) </a> 
          <span>initial load is quick and user interaction is snappy, DOM is a bit larger than focused mode but very small compared to read mode</span>  
        </td>
      </tr>
      <tr>
        <td> 
          <a href="./tests/perf-v3-focused.html">OpenAPI 3.0 - Focused Mode (fastest)</a> 
          <span>loads only the section that user is viewing, resulting into a small DOM footprint and snappier interactions</span>  
        </td>
      </tr>
    </table>
  </main>
</GlobalLayout>
